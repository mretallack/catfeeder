import codecs
import paho.mqtt.subscribe as subscribe

key = [0x00,0x00,0x00,0x58,0x00,0x6c,0x5a,0x71,0xba,0x96,0x33,0xf8,0xc7,0xfc,
		0x4e,0xaf,0xce,0x9e,0xe2,0x03,0xc3,0xa8,0x9e,0xe4,0x98,0x82,0x2b,0xa0,0x0d,0x9b,
		0xc7,0xbd,0xe0,0x54,0xd5,0xdd,0x4a,0xb0,0x2b,0xa6,0x1a,0x01,0xfa,0x47,0x7a,0xec,0x12,
		0x48,0x11,0x27,0x3f,0x59,0xee,0x84,0x8b,0x93,0x03,0x90,0x3b,0x3a,0xcd,0x74,0x67,0x8f,
		0x83,0x05,0xd5,0xef,0x33,0xdf,0x79,0xd5,0xd5,0x6e,0x00 ]





def on_message(client, userdata, msg):

	rawMsg=msg.payload.decode("utf-8").replace(" ", "")
	print( rawMsg)

	msgBytes = codecs.decode(rawMsg, 'hex')

	print(msgBytes)


	msgType = msgBytes[0]

	if msgType ==0x08:

		moreData=msgBytes[2]
		battery=msgBytes[3]

		# assume battery is -> 6?

		print("beacon, moredata: "+str(moreData), ", battery: "+str(battery))


	elif msgType ==0x01:

		decoded=b''
		o=0
		for i in msgBytes:
			decoded+=(bytes([i ^ key[o]]))
			o=o+1

		print(decoded.hex())

	else:
		print("unknown message type: "+msgType)



subscribe.callback(on_message, "petfeeder/70b3d5f9c0022a6e/message", hostname="10.0.0.12")



